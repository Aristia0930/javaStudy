package com.market.main;
import java.awt.desktop.SystemEventListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;

import com.market.bookitem.Book;
import com.market.cart.Cart;
import com.market.member.Admin;
import com.market.member.User;

public class Welcome {
	static final int NUM_BOOK=3; //final 상수값을 넣는다 바꾸지 못하게
	static final int NUM_ITEM=7;
//	static CarItem[] mCarItem =new CarItem[NUM_BOOK];//객체 배열로 만든거 3개
//	static int mCarCount=0;
	static Cart mCart =new Cart();
	static User mUser;//타입 선언
	

	public static void main(String[] args) {
		Scanner input=new Scanner(System.in);
//		String[][] = new String[NUM_BOOK][NUM_ITEM];
		Book[] mBookList = new Book[NUM_BOOK];


		boolean quit=false;


		System.out.println("Welcome to Shopping Mall");		
		System.out.println("Welcome to Book Market!");
		System.out.println("당신의 이름을 입력하시오");
		String userName=input.next();
		System.out.println("연락처를 입력하시오");
		int userMobile = input.nextInt();
		
		mUser=new User(userName, userMobile);
		
		while(!quit) {
			menuIntroduction();

			int n =input.nextInt();
			//		System.out.println(n+"번을 선택하셨습니다");

			if (n<1 || n >9) {
				System.out.println("1부터 9까지 수를 입력하시오");
			}
			else {
				switch (n) {

				case 1: {
					menuGuestInfo(userName,userMobile);
					break;
				}

				case 2: {
					menuCarItemList();
					break;
				}

				case 3: {
					menuCarClear();

					break;
				}

				case 4: {
					menuCarAdditem(mBookList);
					break;
				}

				case 5: {
					menuCartRemovetItemCount();
					break;
				}

				case 6: {
					menuCarRemoveItem();
					break;
				}

				case 7: {
					menuCartBill();
					break;
				}

				case 8: {
					menuExit();
					quit=true;
					break;
				}
				
				case 9:{
					menuAdminLogin();
					break;
				}


				}
			}



		}
	}

	public static void menuIntroduction() {
		System.out.println("1 고객 정보확인하기 \t 4 바구니에 항목추가하기");
		System.out.println("2 장바구니 상품 목록 보기 \t 5 장바구니의 항목 수량 줄이기");
		System.out.println("3 장바구니 비우기 \t 6 장바구니의 항목 삭제하기");
		System.out.println("7 영수증 표시하기 \t 8 종료");
		System.out.println("9 관리자 로그인");
		System.out.println("*********************************************");
		System.out.println("메뉴 번호를 선택해주세요");

	}

	public static void menuGuestInfo(String name,int mobile) {
		System.out.println("현재 고객 정보:");
		/* System.out.println("이름"+name+" 연락처" +mobile); */
//		Person person = new Person(name, mobile);
		System.out.println("이름"+ mUser.getName()+" 연락처" +mUser.getPhone());
		
	}

	public static void menuCarItemList() {
		if (mCart.mCartCount>=0)
			mCart.printCart();

	}

	public static void menuCarClear() {
		System.out.println("장바구니의 항목 수량 비우기:");
		if(mCart.mCartCount==0)
			System.out.println("장바구니 항목이 없습니다");
		else {
				Scanner input =new Scanner(System.in);
				System.out.println("장바구니에 삭제하시겠습니까 Y|N");				
				String str =input.nextLine();
				if (str.toUpperCase().equals("Y")) {
						mCart.deleteBook();;
						}
			
		}
		
	}

	public static void menuCarAdditem(Book[] booklist) {


		BookList(booklist); //mbook로 만든 객체 책 정보 집어 넣느다.

		mCart.printBookList(booklist);
		boolean quit =false;
		while (!quit) {
			System.out.println("장바구니에 추가할 도서 id 입력:");
			Scanner input=new Scanner(System.in);
			String str=input.nextLine();

			boolean flage =false;
			int numId=-1;

			for (int i=0;i<NUM_BOOK;i++) {
				if(str.equals(booklist[i].getBookId())) {
					numId=i;
					flage=true;
					break;
				}
			}

			if(flage) {
				System.out.println("장바구니에 추가하실꺼면 Y|N");
				str=input.nextLine();
				if (str.toUpperCase().equals("Y")) {
					System.out.println(booklist[numId].getBookId()+"도서가 장바구니에 추가되었습니다 ");
					
					if (!isCartInBook(booklist[numId].getBookId())) {
						mCart.insertBook(booklist[numId]);
					}
					
				}
				
				
				
				quit=true;

			}else {
				System.out.println("다시 입력해주세요");
			}
		}
	}

	private static boolean isCartInBook(String bookId) {
		// TODO Auto-generated method stub
		return mCart.isCartInBook(bookId);
	}

	public static void menuCartRemovetItemCount() {
		System.out.println("장바구니의 항목 수량 줄이기:");
	}

	public static void menuCarRemoveItem() {
		System.out.println("장바구니의 항목 삭제하기");
		if(mCart.mCartCount==0)
			System.out.println("장바구니 항목이 없습니다");
		else {
			menuCarItemList();
			boolean quit = false;
			while(!quit) {
				Scanner input =new Scanner(System.in);
				
				System.out.println("장바구니에서 삭제할 도서의 id를 입력하세요");
				String str=input.nextLine();
				boolean flag=false;
				int numid=-1;
				
				for(int i=0; i<mCart.mCartCount;i++) {
					if(str.equals(mCart.mCartItem[i].getBookID()))
						numid=i;
						flag=true;
						break;
				}
				
				if(flag) {
					System.out.println("장바구니에 삭제하시겠습니까 Y|N");
					str=input.nextLine();
					if (str.toUpperCase().equals("Y")) {
						System.out.println(mCart.mCartItem[numid].getBookID()+"도서가 장바구니에 삭제되었습니다. ");
						mCart.removeCart(numid);
						}
						quit=true;

				}else {
					System.out.println("다시 입력해주세요");
				}
			}
			
		}
	}

	public static void menuCartBill() {
//		System.out.println("영수증 표시하기");
		if(mCart.mCartCount==0) System.out.println("장바구니에 항목이 없습니다");
		else {
			System.out.println("배송받을분은 고객의 정보와 같습니까? y/n");
			Scanner input =new Scanner(System.in);
			String str =input.nextLine();
			if(str.toUpperCase().equals("Y")) {
				System.out.println("배송지를 입력하세요");
				String address =input.nextLine();
				printBill(mUser.getName(),String.valueOf(mUser.getPhone()),address);
				
			}else {
				System.out.println("고객명을 입력해수세요");
				String name =input.nextLine();
				System.out.println("고객 연락처 입력");
				String phone =input.nextLine();
				System.out.println("배송지를 입력하세요");
				String address =input.nextLine();
				printBill(name,phone,address);
				
			}
			
		}
		
		
	}
	
	public static void printBill(String name,String phone,String address) {
		Date date=new Date();
		SimpleDateFormat formatter = new SimpleDateFormat("MM/dd/yyyy");
		String strDate = formatter.format(date);
		System.out.println();
		System.out.println("--------------------------------------");
		System.out.println("고객명"+ name+ "\t\t 연락처"+phone);
		System.out.println("배송지"+address +"\t\t 배송지"+strDate);
		mCart.printCart();
		int sum=0;
		for(int i=0;i<mCart.mCartCount;i++) {
			sum+=mCart.mCartItem[i].getTotalPrice();
		}
		
		System.out.println("총주문 금애은"+sum);
		
	}

	public static void menuExit() {
		System.out.println("종료");
	}

	public static void BookList(Book[] booklist) {
		booklist[0]=new Book("ISBN1234", "쉽게 배우는 JSP", 27000);
		booklist[0].setAuthor("송미영");
		booklist[0].setDescription("단계별로 쇼핑몰을 구현하며 배우는 JSP");
		booklist[0].setCategory("IT전문서");
		booklist[0].setReleaseDate("2018/10/08");

		booklist[1]=new Book("ISBN1235", "안드로이드", 7000);
		booklist[1].setAuthor("우재남");
		booklist[1].setDescription("단계별로 JSP");
		booklist[1].setCategory("IT전문서");
		booklist[1].setReleaseDate("2019/10/08");


		booklist[2]=new Book("ISBN1236", "스크래치", 2000);
		booklist[2].setAuthor("고광일");
		booklist[2].setDescription("컴퓨팅 사고력을 키우는 블록 코딩");
		booklist[2].setCategory("IT전문서");
		booklist[2].setReleaseDate("2020/11/08");


	}
	
	public static void menuAdminLogin() {
		System.out.println("관리자 정보를 입력하세요");
		Scanner input=new Scanner(System.in);
		System.out.println("아이디: ");
		
		String adminId = input.next();
		
		System.out.println("비밀번호");
		
		String adminPw = input.next();
		
		Admin admin = new Admin(mUser.getName(),mUser.getPhone());
		if (adminId.equals(admin.getId())&& adminPw.equals(admin.getPassword())){
			System.out.println("이름"+admin.getName()+"연락처"+admin.getAddress());
			System.out.println("아이디"+admin.getId()+"비밀번호"+admin.getPassword());
		}else {
			System.out.println("관리자 정보와 일치하지 않습니다.");
		}
			
		
		}

	
}
